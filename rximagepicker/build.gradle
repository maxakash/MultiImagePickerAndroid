apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compileOnly rootProject.ext.dependencies["appcompat"]

    api rootProject.ext.dependencies["rxkotlin"]
    api rootProject.ext.dependencies["rxandroid"]
    implementation rootProject.ext.dependencies["kotlin-android"]
    implementation rootProject.ext.dependencies["kotlin-reflect"]
    testImplementation rootProject.ext.dependencies["junit"]
    testImplementation rootProject.ext.dependencies["mockito-kotlin"]
}
repositories {
    mavenCentral()
}

version = rootProject.ext.android["versionName"]
group = rootProject.ext.constants["group"]
def siteUrl = rootProject.ext.constants["siteUrl"]
def gitUrl = rootProject.ext.constants["gitUrl"]
def libName = "rximagepicker"
def projectName = "RxImagePicker"

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name projectName
                url siteUrl
                licenses {
                    license {
                        name 'MIT license'
                        url 'https://github.com/qingmei2/RxImagePicker/blob/2.x/LICENSE'
                    }
                }
                developers {
                    developer {
                        id 'qingmei2'
                        name 'qingmei2'
                        email 'mq2553299@qq.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    failOnError false
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = libName
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["MIT"]
        publish = true
    }
}